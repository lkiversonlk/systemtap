#! /usr/bin/env stap 

global reads, writes, total_io

probe vfs.read.return {
    if($return > 0) {
        reads[pid(), execname()] += $return
        total_io[pid(), execname()] += $return
    }
}

probe vfs.write.return {
    if($return > 0) {
        writes[pid(), execname()] += $return
        total_io[pid(), execname()] += $return
    }
}

function humanreadable(bytes) {
    if (bytes > 1024 * 1024 * 1024 ) {
        return sprintf("%d GB", bytes/1024/1024/1024)
    } else if(bytes > 1024 * 1024) {
        return sprintf("%d MB", bytes/1024/1024)
    } else if (bytes > 1024) {
        return sprintf("%d KB", bytes/1024)
    } else {
        return sprintf("%d B", bytes)
    }
}

probe timer.s(1) {
    foreach([p, e] in total_io- limit 10) {
        printf("%8d %15s r: %12s w:%12s \n", p, e, humanreadable(reads[p, e]), humanreadable(writes[p, e]))
        printf("\n")
    }
}